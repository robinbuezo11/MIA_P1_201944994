Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> init
Rule 1     init -> list_commands
Rule 2     list_commands -> list_commands commands
Rule 3     list_commands -> commands
Rule 4     commands -> command_execute
Rule 5     commands -> command_mkdisk
Rule 6     commands -> command_rmdisk
Rule 7     commands -> command_fdisk
Rule 8     commands -> command_rep
Rule 9     command_execute -> EXECUTE GUION PATH IGUAL CADENA
Rule 10    command_execute -> EXECUTE GUION PATH IGUAL CADENA_SC
Rule 11    command_mkdisk -> MKDISK params_mkdisk
Rule 12    params_mkdisk -> params_mkdisk param_mkdisk
Rule 13    params_mkdisk -> param_mkdisk
Rule 14    param_mkdisk -> GUION PATH IGUAL CADENA
Rule 15    param_mkdisk -> GUION PATH IGUAL CADENA_SC
Rule 16    param_mkdisk -> GUION SIZE IGUAL ENTERO
Rule 17    param_mkdisk -> GUION UNIT IGUAL CADENA_SC
Rule 18    param_mkdisk -> GUION FIT IGUAL CADENA_SC
Rule 19    command_rmdisk -> RMDISK GUION PATH IGUAL CADENA
Rule 20    command_rmdisk -> RMDISK GUION PATH IGUAL CADENA_SC
Rule 21    command_fdisk -> FDISK params_fdisk
Rule 22    params_fdisk -> params_fdisk param_fdisk
Rule 23    params_fdisk -> param_fdisk
Rule 24    param_fdisk -> GUION PATH IGUAL CADENA
Rule 25    param_fdisk -> GUION PATH IGUAL CADENA_SC
Rule 26    param_fdisk -> GUION SIZE IGUAL ENTERO
Rule 27    param_fdisk -> GUION UNIT IGUAL CADENA_SC
Rule 28    param_fdisk -> GUION NAME IGUAL CADENA
Rule 29    param_fdisk -> GUION NAME IGUAL CADENA_SC
Rule 30    command_rep -> REP GUION PATH IGUAL CADENA
Rule 31    command_rep -> REP GUION PATH IGUAL CADENA_SC

Terminals, with rules where they appear

CADENA               : 9 14 19 24 28 30
CADENA_SC            : 10 15 17 18 20 25 27 29 31
COMMENT              : 
ENTERO               : 16 26
EXECUTE              : 9 10
FDISK                : 21
FIT                  : 18
GUION                : 9 10 14 15 16 17 18 19 20 24 25 26 27 28 29 30 31
IGUAL                : 9 10 14 15 16 17 18 19 20 24 25 26 27 28 29 30 31
MKDISK               : 11
NAME                 : 28 29
PATH                 : 9 10 14 15 19 20 24 25 30 31
REP                  : 30 31
RMDISK               : 19 20
SIZE                 : 16 26
UNIT                 : 17 27
error                : 

Nonterminals, with rules where they appear

command_execute      : 4
command_fdisk        : 7
command_mkdisk       : 5
command_rep          : 8
command_rmdisk       : 6
commands             : 2 3
init                 : 0
list_commands        : 1 2
param_fdisk          : 22 23
param_mkdisk         : 12 13
params_fdisk         : 21 22
params_mkdisk        : 11 12

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . list_commands
    (2) list_commands -> . list_commands commands
    (3) list_commands -> . commands
    (4) commands -> . command_execute
    (5) commands -> . command_mkdisk
    (6) commands -> . command_rmdisk
    (7) commands -> . command_fdisk
    (8) commands -> . command_rep
    (9) command_execute -> . EXECUTE GUION PATH IGUAL CADENA
    (10) command_execute -> . EXECUTE GUION PATH IGUAL CADENA_SC
    (11) command_mkdisk -> . MKDISK params_mkdisk
    (19) command_rmdisk -> . RMDISK GUION PATH IGUAL CADENA
    (20) command_rmdisk -> . RMDISK GUION PATH IGUAL CADENA_SC
    (21) command_fdisk -> . FDISK params_fdisk
    (30) command_rep -> . REP GUION PATH IGUAL CADENA
    (31) command_rep -> . REP GUION PATH IGUAL CADENA_SC

    EXECUTE         shift and go to state 9
    MKDISK          shift and go to state 10
    RMDISK          shift and go to state 11
    FDISK           shift and go to state 12
    REP             shift and go to state 13

    init                           shift and go to state 1
    list_commands                  shift and go to state 2
    commands                       shift and go to state 3
    command_execute                shift and go to state 4
    command_mkdisk                 shift and go to state 5
    command_rmdisk                 shift and go to state 6
    command_fdisk                  shift and go to state 7
    command_rep                    shift and go to state 8

state 1

    (0) S' -> init .



state 2

    (1) init -> list_commands .
    (2) list_commands -> list_commands . commands
    (4) commands -> . command_execute
    (5) commands -> . command_mkdisk
    (6) commands -> . command_rmdisk
    (7) commands -> . command_fdisk
    (8) commands -> . command_rep
    (9) command_execute -> . EXECUTE GUION PATH IGUAL CADENA
    (10) command_execute -> . EXECUTE GUION PATH IGUAL CADENA_SC
    (11) command_mkdisk -> . MKDISK params_mkdisk
    (19) command_rmdisk -> . RMDISK GUION PATH IGUAL CADENA
    (20) command_rmdisk -> . RMDISK GUION PATH IGUAL CADENA_SC
    (21) command_fdisk -> . FDISK params_fdisk
    (30) command_rep -> . REP GUION PATH IGUAL CADENA
    (31) command_rep -> . REP GUION PATH IGUAL CADENA_SC

    $end            reduce using rule 1 (init -> list_commands .)
    EXECUTE         shift and go to state 9
    MKDISK          shift and go to state 10
    RMDISK          shift and go to state 11
    FDISK           shift and go to state 12
    REP             shift and go to state 13

    commands                       shift and go to state 14
    command_execute                shift and go to state 4
    command_mkdisk                 shift and go to state 5
    command_rmdisk                 shift and go to state 6
    command_fdisk                  shift and go to state 7
    command_rep                    shift and go to state 8

state 3

    (3) list_commands -> commands .

    EXECUTE         reduce using rule 3 (list_commands -> commands .)
    MKDISK          reduce using rule 3 (list_commands -> commands .)
    RMDISK          reduce using rule 3 (list_commands -> commands .)
    FDISK           reduce using rule 3 (list_commands -> commands .)
    REP             reduce using rule 3 (list_commands -> commands .)
    $end            reduce using rule 3 (list_commands -> commands .)


state 4

    (4) commands -> command_execute .

    EXECUTE         reduce using rule 4 (commands -> command_execute .)
    MKDISK          reduce using rule 4 (commands -> command_execute .)
    RMDISK          reduce using rule 4 (commands -> command_execute .)
    FDISK           reduce using rule 4 (commands -> command_execute .)
    REP             reduce using rule 4 (commands -> command_execute .)
    $end            reduce using rule 4 (commands -> command_execute .)


state 5

    (5) commands -> command_mkdisk .

    EXECUTE         reduce using rule 5 (commands -> command_mkdisk .)
    MKDISK          reduce using rule 5 (commands -> command_mkdisk .)
    RMDISK          reduce using rule 5 (commands -> command_mkdisk .)
    FDISK           reduce using rule 5 (commands -> command_mkdisk .)
    REP             reduce using rule 5 (commands -> command_mkdisk .)
    $end            reduce using rule 5 (commands -> command_mkdisk .)


state 6

    (6) commands -> command_rmdisk .

    EXECUTE         reduce using rule 6 (commands -> command_rmdisk .)
    MKDISK          reduce using rule 6 (commands -> command_rmdisk .)
    RMDISK          reduce using rule 6 (commands -> command_rmdisk .)
    FDISK           reduce using rule 6 (commands -> command_rmdisk .)
    REP             reduce using rule 6 (commands -> command_rmdisk .)
    $end            reduce using rule 6 (commands -> command_rmdisk .)


state 7

    (7) commands -> command_fdisk .

    EXECUTE         reduce using rule 7 (commands -> command_fdisk .)
    MKDISK          reduce using rule 7 (commands -> command_fdisk .)
    RMDISK          reduce using rule 7 (commands -> command_fdisk .)
    FDISK           reduce using rule 7 (commands -> command_fdisk .)
    REP             reduce using rule 7 (commands -> command_fdisk .)
    $end            reduce using rule 7 (commands -> command_fdisk .)


state 8

    (8) commands -> command_rep .

    EXECUTE         reduce using rule 8 (commands -> command_rep .)
    MKDISK          reduce using rule 8 (commands -> command_rep .)
    RMDISK          reduce using rule 8 (commands -> command_rep .)
    FDISK           reduce using rule 8 (commands -> command_rep .)
    REP             reduce using rule 8 (commands -> command_rep .)
    $end            reduce using rule 8 (commands -> command_rep .)


state 9

    (9) command_execute -> EXECUTE . GUION PATH IGUAL CADENA
    (10) command_execute -> EXECUTE . GUION PATH IGUAL CADENA_SC

    GUION           shift and go to state 15


state 10

    (11) command_mkdisk -> MKDISK . params_mkdisk
    (12) params_mkdisk -> . params_mkdisk param_mkdisk
    (13) params_mkdisk -> . param_mkdisk
    (14) param_mkdisk -> . GUION PATH IGUAL CADENA
    (15) param_mkdisk -> . GUION PATH IGUAL CADENA_SC
    (16) param_mkdisk -> . GUION SIZE IGUAL ENTERO
    (17) param_mkdisk -> . GUION UNIT IGUAL CADENA_SC
    (18) param_mkdisk -> . GUION FIT IGUAL CADENA_SC

    GUION           shift and go to state 18

    params_mkdisk                  shift and go to state 16
    param_mkdisk                   shift and go to state 17

state 11

    (19) command_rmdisk -> RMDISK . GUION PATH IGUAL CADENA
    (20) command_rmdisk -> RMDISK . GUION PATH IGUAL CADENA_SC

    GUION           shift and go to state 19


state 12

    (21) command_fdisk -> FDISK . params_fdisk
    (22) params_fdisk -> . params_fdisk param_fdisk
    (23) params_fdisk -> . param_fdisk
    (24) param_fdisk -> . GUION PATH IGUAL CADENA
    (25) param_fdisk -> . GUION PATH IGUAL CADENA_SC
    (26) param_fdisk -> . GUION SIZE IGUAL ENTERO
    (27) param_fdisk -> . GUION UNIT IGUAL CADENA_SC
    (28) param_fdisk -> . GUION NAME IGUAL CADENA
    (29) param_fdisk -> . GUION NAME IGUAL CADENA_SC

    GUION           shift and go to state 22

    params_fdisk                   shift and go to state 20
    param_fdisk                    shift and go to state 21

state 13

    (30) command_rep -> REP . GUION PATH IGUAL CADENA
    (31) command_rep -> REP . GUION PATH IGUAL CADENA_SC

    GUION           shift and go to state 23


state 14

    (2) list_commands -> list_commands commands .

    EXECUTE         reduce using rule 2 (list_commands -> list_commands commands .)
    MKDISK          reduce using rule 2 (list_commands -> list_commands commands .)
    RMDISK          reduce using rule 2 (list_commands -> list_commands commands .)
    FDISK           reduce using rule 2 (list_commands -> list_commands commands .)
    REP             reduce using rule 2 (list_commands -> list_commands commands .)
    $end            reduce using rule 2 (list_commands -> list_commands commands .)


state 15

    (9) command_execute -> EXECUTE GUION . PATH IGUAL CADENA
    (10) command_execute -> EXECUTE GUION . PATH IGUAL CADENA_SC

    PATH            shift and go to state 24


state 16

    (11) command_mkdisk -> MKDISK params_mkdisk .
    (12) params_mkdisk -> params_mkdisk . param_mkdisk
    (14) param_mkdisk -> . GUION PATH IGUAL CADENA
    (15) param_mkdisk -> . GUION PATH IGUAL CADENA_SC
    (16) param_mkdisk -> . GUION SIZE IGUAL ENTERO
    (17) param_mkdisk -> . GUION UNIT IGUAL CADENA_SC
    (18) param_mkdisk -> . GUION FIT IGUAL CADENA_SC

    EXECUTE         reduce using rule 11 (command_mkdisk -> MKDISK params_mkdisk .)
    MKDISK          reduce using rule 11 (command_mkdisk -> MKDISK params_mkdisk .)
    RMDISK          reduce using rule 11 (command_mkdisk -> MKDISK params_mkdisk .)
    FDISK           reduce using rule 11 (command_mkdisk -> MKDISK params_mkdisk .)
    REP             reduce using rule 11 (command_mkdisk -> MKDISK params_mkdisk .)
    $end            reduce using rule 11 (command_mkdisk -> MKDISK params_mkdisk .)
    GUION           shift and go to state 18

    param_mkdisk                   shift and go to state 25

state 17

    (13) params_mkdisk -> param_mkdisk .

    GUION           reduce using rule 13 (params_mkdisk -> param_mkdisk .)
    EXECUTE         reduce using rule 13 (params_mkdisk -> param_mkdisk .)
    MKDISK          reduce using rule 13 (params_mkdisk -> param_mkdisk .)
    RMDISK          reduce using rule 13 (params_mkdisk -> param_mkdisk .)
    FDISK           reduce using rule 13 (params_mkdisk -> param_mkdisk .)
    REP             reduce using rule 13 (params_mkdisk -> param_mkdisk .)
    $end            reduce using rule 13 (params_mkdisk -> param_mkdisk .)


state 18

    (14) param_mkdisk -> GUION . PATH IGUAL CADENA
    (15) param_mkdisk -> GUION . PATH IGUAL CADENA_SC
    (16) param_mkdisk -> GUION . SIZE IGUAL ENTERO
    (17) param_mkdisk -> GUION . UNIT IGUAL CADENA_SC
    (18) param_mkdisk -> GUION . FIT IGUAL CADENA_SC

    PATH            shift and go to state 26
    SIZE            shift and go to state 27
    UNIT            shift and go to state 28
    FIT             shift and go to state 29


state 19

    (19) command_rmdisk -> RMDISK GUION . PATH IGUAL CADENA
    (20) command_rmdisk -> RMDISK GUION . PATH IGUAL CADENA_SC

    PATH            shift and go to state 30


state 20

    (21) command_fdisk -> FDISK params_fdisk .
    (22) params_fdisk -> params_fdisk . param_fdisk
    (24) param_fdisk -> . GUION PATH IGUAL CADENA
    (25) param_fdisk -> . GUION PATH IGUAL CADENA_SC
    (26) param_fdisk -> . GUION SIZE IGUAL ENTERO
    (27) param_fdisk -> . GUION UNIT IGUAL CADENA_SC
    (28) param_fdisk -> . GUION NAME IGUAL CADENA
    (29) param_fdisk -> . GUION NAME IGUAL CADENA_SC

    EXECUTE         reduce using rule 21 (command_fdisk -> FDISK params_fdisk .)
    MKDISK          reduce using rule 21 (command_fdisk -> FDISK params_fdisk .)
    RMDISK          reduce using rule 21 (command_fdisk -> FDISK params_fdisk .)
    FDISK           reduce using rule 21 (command_fdisk -> FDISK params_fdisk .)
    REP             reduce using rule 21 (command_fdisk -> FDISK params_fdisk .)
    $end            reduce using rule 21 (command_fdisk -> FDISK params_fdisk .)
    GUION           shift and go to state 22

    param_fdisk                    shift and go to state 31

state 21

    (23) params_fdisk -> param_fdisk .

    GUION           reduce using rule 23 (params_fdisk -> param_fdisk .)
    EXECUTE         reduce using rule 23 (params_fdisk -> param_fdisk .)
    MKDISK          reduce using rule 23 (params_fdisk -> param_fdisk .)
    RMDISK          reduce using rule 23 (params_fdisk -> param_fdisk .)
    FDISK           reduce using rule 23 (params_fdisk -> param_fdisk .)
    REP             reduce using rule 23 (params_fdisk -> param_fdisk .)
    $end            reduce using rule 23 (params_fdisk -> param_fdisk .)


state 22

    (24) param_fdisk -> GUION . PATH IGUAL CADENA
    (25) param_fdisk -> GUION . PATH IGUAL CADENA_SC
    (26) param_fdisk -> GUION . SIZE IGUAL ENTERO
    (27) param_fdisk -> GUION . UNIT IGUAL CADENA_SC
    (28) param_fdisk -> GUION . NAME IGUAL CADENA
    (29) param_fdisk -> GUION . NAME IGUAL CADENA_SC

    PATH            shift and go to state 32
    SIZE            shift and go to state 33
    UNIT            shift and go to state 34
    NAME            shift and go to state 35


state 23

    (30) command_rep -> REP GUION . PATH IGUAL CADENA
    (31) command_rep -> REP GUION . PATH IGUAL CADENA_SC

    PATH            shift and go to state 36


state 24

    (9) command_execute -> EXECUTE GUION PATH . IGUAL CADENA
    (10) command_execute -> EXECUTE GUION PATH . IGUAL CADENA_SC

    IGUAL           shift and go to state 37


state 25

    (12) params_mkdisk -> params_mkdisk param_mkdisk .

    GUION           reduce using rule 12 (params_mkdisk -> params_mkdisk param_mkdisk .)
    EXECUTE         reduce using rule 12 (params_mkdisk -> params_mkdisk param_mkdisk .)
    MKDISK          reduce using rule 12 (params_mkdisk -> params_mkdisk param_mkdisk .)
    RMDISK          reduce using rule 12 (params_mkdisk -> params_mkdisk param_mkdisk .)
    FDISK           reduce using rule 12 (params_mkdisk -> params_mkdisk param_mkdisk .)
    REP             reduce using rule 12 (params_mkdisk -> params_mkdisk param_mkdisk .)
    $end            reduce using rule 12 (params_mkdisk -> params_mkdisk param_mkdisk .)


state 26

    (14) param_mkdisk -> GUION PATH . IGUAL CADENA
    (15) param_mkdisk -> GUION PATH . IGUAL CADENA_SC

    IGUAL           shift and go to state 38


state 27

    (16) param_mkdisk -> GUION SIZE . IGUAL ENTERO

    IGUAL           shift and go to state 39


state 28

    (17) param_mkdisk -> GUION UNIT . IGUAL CADENA_SC

    IGUAL           shift and go to state 40


state 29

    (18) param_mkdisk -> GUION FIT . IGUAL CADENA_SC

    IGUAL           shift and go to state 41


state 30

    (19) command_rmdisk -> RMDISK GUION PATH . IGUAL CADENA
    (20) command_rmdisk -> RMDISK GUION PATH . IGUAL CADENA_SC

    IGUAL           shift and go to state 42


state 31

    (22) params_fdisk -> params_fdisk param_fdisk .

    GUION           reduce using rule 22 (params_fdisk -> params_fdisk param_fdisk .)
    EXECUTE         reduce using rule 22 (params_fdisk -> params_fdisk param_fdisk .)
    MKDISK          reduce using rule 22 (params_fdisk -> params_fdisk param_fdisk .)
    RMDISK          reduce using rule 22 (params_fdisk -> params_fdisk param_fdisk .)
    FDISK           reduce using rule 22 (params_fdisk -> params_fdisk param_fdisk .)
    REP             reduce using rule 22 (params_fdisk -> params_fdisk param_fdisk .)
    $end            reduce using rule 22 (params_fdisk -> params_fdisk param_fdisk .)


state 32

    (24) param_fdisk -> GUION PATH . IGUAL CADENA
    (25) param_fdisk -> GUION PATH . IGUAL CADENA_SC

    IGUAL           shift and go to state 43


state 33

    (26) param_fdisk -> GUION SIZE . IGUAL ENTERO

    IGUAL           shift and go to state 44


state 34

    (27) param_fdisk -> GUION UNIT . IGUAL CADENA_SC

    IGUAL           shift and go to state 45


state 35

    (28) param_fdisk -> GUION NAME . IGUAL CADENA
    (29) param_fdisk -> GUION NAME . IGUAL CADENA_SC

    IGUAL           shift and go to state 46


state 36

    (30) command_rep -> REP GUION PATH . IGUAL CADENA
    (31) command_rep -> REP GUION PATH . IGUAL CADENA_SC

    IGUAL           shift and go to state 47


state 37

    (9) command_execute -> EXECUTE GUION PATH IGUAL . CADENA
    (10) command_execute -> EXECUTE GUION PATH IGUAL . CADENA_SC

    CADENA          shift and go to state 48
    CADENA_SC       shift and go to state 49


state 38

    (14) param_mkdisk -> GUION PATH IGUAL . CADENA
    (15) param_mkdisk -> GUION PATH IGUAL . CADENA_SC

    CADENA          shift and go to state 50
    CADENA_SC       shift and go to state 51


state 39

    (16) param_mkdisk -> GUION SIZE IGUAL . ENTERO

    ENTERO          shift and go to state 52


state 40

    (17) param_mkdisk -> GUION UNIT IGUAL . CADENA_SC

    CADENA_SC       shift and go to state 53


state 41

    (18) param_mkdisk -> GUION FIT IGUAL . CADENA_SC

    CADENA_SC       shift and go to state 54


state 42

    (19) command_rmdisk -> RMDISK GUION PATH IGUAL . CADENA
    (20) command_rmdisk -> RMDISK GUION PATH IGUAL . CADENA_SC

    CADENA          shift and go to state 55
    CADENA_SC       shift and go to state 56


state 43

    (24) param_fdisk -> GUION PATH IGUAL . CADENA
    (25) param_fdisk -> GUION PATH IGUAL . CADENA_SC

    CADENA          shift and go to state 57
    CADENA_SC       shift and go to state 58


state 44

    (26) param_fdisk -> GUION SIZE IGUAL . ENTERO

    ENTERO          shift and go to state 59


state 45

    (27) param_fdisk -> GUION UNIT IGUAL . CADENA_SC

    CADENA_SC       shift and go to state 60


state 46

    (28) param_fdisk -> GUION NAME IGUAL . CADENA
    (29) param_fdisk -> GUION NAME IGUAL . CADENA_SC

    CADENA          shift and go to state 61
    CADENA_SC       shift and go to state 62


state 47

    (30) command_rep -> REP GUION PATH IGUAL . CADENA
    (31) command_rep -> REP GUION PATH IGUAL . CADENA_SC

    CADENA          shift and go to state 63
    CADENA_SC       shift and go to state 64


state 48

    (9) command_execute -> EXECUTE GUION PATH IGUAL CADENA .

    EXECUTE         reduce using rule 9 (command_execute -> EXECUTE GUION PATH IGUAL CADENA .)
    MKDISK          reduce using rule 9 (command_execute -> EXECUTE GUION PATH IGUAL CADENA .)
    RMDISK          reduce using rule 9 (command_execute -> EXECUTE GUION PATH IGUAL CADENA .)
    FDISK           reduce using rule 9 (command_execute -> EXECUTE GUION PATH IGUAL CADENA .)
    REP             reduce using rule 9 (command_execute -> EXECUTE GUION PATH IGUAL CADENA .)
    $end            reduce using rule 9 (command_execute -> EXECUTE GUION PATH IGUAL CADENA .)


state 49

    (10) command_execute -> EXECUTE GUION PATH IGUAL CADENA_SC .

    EXECUTE         reduce using rule 10 (command_execute -> EXECUTE GUION PATH IGUAL CADENA_SC .)
    MKDISK          reduce using rule 10 (command_execute -> EXECUTE GUION PATH IGUAL CADENA_SC .)
    RMDISK          reduce using rule 10 (command_execute -> EXECUTE GUION PATH IGUAL CADENA_SC .)
    FDISK           reduce using rule 10 (command_execute -> EXECUTE GUION PATH IGUAL CADENA_SC .)
    REP             reduce using rule 10 (command_execute -> EXECUTE GUION PATH IGUAL CADENA_SC .)
    $end            reduce using rule 10 (command_execute -> EXECUTE GUION PATH IGUAL CADENA_SC .)


state 50

    (14) param_mkdisk -> GUION PATH IGUAL CADENA .

    GUION           reduce using rule 14 (param_mkdisk -> GUION PATH IGUAL CADENA .)
    EXECUTE         reduce using rule 14 (param_mkdisk -> GUION PATH IGUAL CADENA .)
    MKDISK          reduce using rule 14 (param_mkdisk -> GUION PATH IGUAL CADENA .)
    RMDISK          reduce using rule 14 (param_mkdisk -> GUION PATH IGUAL CADENA .)
    FDISK           reduce using rule 14 (param_mkdisk -> GUION PATH IGUAL CADENA .)
    REP             reduce using rule 14 (param_mkdisk -> GUION PATH IGUAL CADENA .)
    $end            reduce using rule 14 (param_mkdisk -> GUION PATH IGUAL CADENA .)


state 51

    (15) param_mkdisk -> GUION PATH IGUAL CADENA_SC .

    GUION           reduce using rule 15 (param_mkdisk -> GUION PATH IGUAL CADENA_SC .)
    EXECUTE         reduce using rule 15 (param_mkdisk -> GUION PATH IGUAL CADENA_SC .)
    MKDISK          reduce using rule 15 (param_mkdisk -> GUION PATH IGUAL CADENA_SC .)
    RMDISK          reduce using rule 15 (param_mkdisk -> GUION PATH IGUAL CADENA_SC .)
    FDISK           reduce using rule 15 (param_mkdisk -> GUION PATH IGUAL CADENA_SC .)
    REP             reduce using rule 15 (param_mkdisk -> GUION PATH IGUAL CADENA_SC .)
    $end            reduce using rule 15 (param_mkdisk -> GUION PATH IGUAL CADENA_SC .)


state 52

    (16) param_mkdisk -> GUION SIZE IGUAL ENTERO .

    GUION           reduce using rule 16 (param_mkdisk -> GUION SIZE IGUAL ENTERO .)
    EXECUTE         reduce using rule 16 (param_mkdisk -> GUION SIZE IGUAL ENTERO .)
    MKDISK          reduce using rule 16 (param_mkdisk -> GUION SIZE IGUAL ENTERO .)
    RMDISK          reduce using rule 16 (param_mkdisk -> GUION SIZE IGUAL ENTERO .)
    FDISK           reduce using rule 16 (param_mkdisk -> GUION SIZE IGUAL ENTERO .)
    REP             reduce using rule 16 (param_mkdisk -> GUION SIZE IGUAL ENTERO .)
    $end            reduce using rule 16 (param_mkdisk -> GUION SIZE IGUAL ENTERO .)


state 53

    (17) param_mkdisk -> GUION UNIT IGUAL CADENA_SC .

    GUION           reduce using rule 17 (param_mkdisk -> GUION UNIT IGUAL CADENA_SC .)
    EXECUTE         reduce using rule 17 (param_mkdisk -> GUION UNIT IGUAL CADENA_SC .)
    MKDISK          reduce using rule 17 (param_mkdisk -> GUION UNIT IGUAL CADENA_SC .)
    RMDISK          reduce using rule 17 (param_mkdisk -> GUION UNIT IGUAL CADENA_SC .)
    FDISK           reduce using rule 17 (param_mkdisk -> GUION UNIT IGUAL CADENA_SC .)
    REP             reduce using rule 17 (param_mkdisk -> GUION UNIT IGUAL CADENA_SC .)
    $end            reduce using rule 17 (param_mkdisk -> GUION UNIT IGUAL CADENA_SC .)


state 54

    (18) param_mkdisk -> GUION FIT IGUAL CADENA_SC .

    GUION           reduce using rule 18 (param_mkdisk -> GUION FIT IGUAL CADENA_SC .)
    EXECUTE         reduce using rule 18 (param_mkdisk -> GUION FIT IGUAL CADENA_SC .)
    MKDISK          reduce using rule 18 (param_mkdisk -> GUION FIT IGUAL CADENA_SC .)
    RMDISK          reduce using rule 18 (param_mkdisk -> GUION FIT IGUAL CADENA_SC .)
    FDISK           reduce using rule 18 (param_mkdisk -> GUION FIT IGUAL CADENA_SC .)
    REP             reduce using rule 18 (param_mkdisk -> GUION FIT IGUAL CADENA_SC .)
    $end            reduce using rule 18 (param_mkdisk -> GUION FIT IGUAL CADENA_SC .)


state 55

    (19) command_rmdisk -> RMDISK GUION PATH IGUAL CADENA .

    EXECUTE         reduce using rule 19 (command_rmdisk -> RMDISK GUION PATH IGUAL CADENA .)
    MKDISK          reduce using rule 19 (command_rmdisk -> RMDISK GUION PATH IGUAL CADENA .)
    RMDISK          reduce using rule 19 (command_rmdisk -> RMDISK GUION PATH IGUAL CADENA .)
    FDISK           reduce using rule 19 (command_rmdisk -> RMDISK GUION PATH IGUAL CADENA .)
    REP             reduce using rule 19 (command_rmdisk -> RMDISK GUION PATH IGUAL CADENA .)
    $end            reduce using rule 19 (command_rmdisk -> RMDISK GUION PATH IGUAL CADENA .)


state 56

    (20) command_rmdisk -> RMDISK GUION PATH IGUAL CADENA_SC .

    EXECUTE         reduce using rule 20 (command_rmdisk -> RMDISK GUION PATH IGUAL CADENA_SC .)
    MKDISK          reduce using rule 20 (command_rmdisk -> RMDISK GUION PATH IGUAL CADENA_SC .)
    RMDISK          reduce using rule 20 (command_rmdisk -> RMDISK GUION PATH IGUAL CADENA_SC .)
    FDISK           reduce using rule 20 (command_rmdisk -> RMDISK GUION PATH IGUAL CADENA_SC .)
    REP             reduce using rule 20 (command_rmdisk -> RMDISK GUION PATH IGUAL CADENA_SC .)
    $end            reduce using rule 20 (command_rmdisk -> RMDISK GUION PATH IGUAL CADENA_SC .)


state 57

    (24) param_fdisk -> GUION PATH IGUAL CADENA .

    GUION           reduce using rule 24 (param_fdisk -> GUION PATH IGUAL CADENA .)
    EXECUTE         reduce using rule 24 (param_fdisk -> GUION PATH IGUAL CADENA .)
    MKDISK          reduce using rule 24 (param_fdisk -> GUION PATH IGUAL CADENA .)
    RMDISK          reduce using rule 24 (param_fdisk -> GUION PATH IGUAL CADENA .)
    FDISK           reduce using rule 24 (param_fdisk -> GUION PATH IGUAL CADENA .)
    REP             reduce using rule 24 (param_fdisk -> GUION PATH IGUAL CADENA .)
    $end            reduce using rule 24 (param_fdisk -> GUION PATH IGUAL CADENA .)


state 58

    (25) param_fdisk -> GUION PATH IGUAL CADENA_SC .

    GUION           reduce using rule 25 (param_fdisk -> GUION PATH IGUAL CADENA_SC .)
    EXECUTE         reduce using rule 25 (param_fdisk -> GUION PATH IGUAL CADENA_SC .)
    MKDISK          reduce using rule 25 (param_fdisk -> GUION PATH IGUAL CADENA_SC .)
    RMDISK          reduce using rule 25 (param_fdisk -> GUION PATH IGUAL CADENA_SC .)
    FDISK           reduce using rule 25 (param_fdisk -> GUION PATH IGUAL CADENA_SC .)
    REP             reduce using rule 25 (param_fdisk -> GUION PATH IGUAL CADENA_SC .)
    $end            reduce using rule 25 (param_fdisk -> GUION PATH IGUAL CADENA_SC .)


state 59

    (26) param_fdisk -> GUION SIZE IGUAL ENTERO .

    GUION           reduce using rule 26 (param_fdisk -> GUION SIZE IGUAL ENTERO .)
    EXECUTE         reduce using rule 26 (param_fdisk -> GUION SIZE IGUAL ENTERO .)
    MKDISK          reduce using rule 26 (param_fdisk -> GUION SIZE IGUAL ENTERO .)
    RMDISK          reduce using rule 26 (param_fdisk -> GUION SIZE IGUAL ENTERO .)
    FDISK           reduce using rule 26 (param_fdisk -> GUION SIZE IGUAL ENTERO .)
    REP             reduce using rule 26 (param_fdisk -> GUION SIZE IGUAL ENTERO .)
    $end            reduce using rule 26 (param_fdisk -> GUION SIZE IGUAL ENTERO .)


state 60

    (27) param_fdisk -> GUION UNIT IGUAL CADENA_SC .

    GUION           reduce using rule 27 (param_fdisk -> GUION UNIT IGUAL CADENA_SC .)
    EXECUTE         reduce using rule 27 (param_fdisk -> GUION UNIT IGUAL CADENA_SC .)
    MKDISK          reduce using rule 27 (param_fdisk -> GUION UNIT IGUAL CADENA_SC .)
    RMDISK          reduce using rule 27 (param_fdisk -> GUION UNIT IGUAL CADENA_SC .)
    FDISK           reduce using rule 27 (param_fdisk -> GUION UNIT IGUAL CADENA_SC .)
    REP             reduce using rule 27 (param_fdisk -> GUION UNIT IGUAL CADENA_SC .)
    $end            reduce using rule 27 (param_fdisk -> GUION UNIT IGUAL CADENA_SC .)


state 61

    (28) param_fdisk -> GUION NAME IGUAL CADENA .

    GUION           reduce using rule 28 (param_fdisk -> GUION NAME IGUAL CADENA .)
    EXECUTE         reduce using rule 28 (param_fdisk -> GUION NAME IGUAL CADENA .)
    MKDISK          reduce using rule 28 (param_fdisk -> GUION NAME IGUAL CADENA .)
    RMDISK          reduce using rule 28 (param_fdisk -> GUION NAME IGUAL CADENA .)
    FDISK           reduce using rule 28 (param_fdisk -> GUION NAME IGUAL CADENA .)
    REP             reduce using rule 28 (param_fdisk -> GUION NAME IGUAL CADENA .)
    $end            reduce using rule 28 (param_fdisk -> GUION NAME IGUAL CADENA .)


state 62

    (29) param_fdisk -> GUION NAME IGUAL CADENA_SC .

    GUION           reduce using rule 29 (param_fdisk -> GUION NAME IGUAL CADENA_SC .)
    EXECUTE         reduce using rule 29 (param_fdisk -> GUION NAME IGUAL CADENA_SC .)
    MKDISK          reduce using rule 29 (param_fdisk -> GUION NAME IGUAL CADENA_SC .)
    RMDISK          reduce using rule 29 (param_fdisk -> GUION NAME IGUAL CADENA_SC .)
    FDISK           reduce using rule 29 (param_fdisk -> GUION NAME IGUAL CADENA_SC .)
    REP             reduce using rule 29 (param_fdisk -> GUION NAME IGUAL CADENA_SC .)
    $end            reduce using rule 29 (param_fdisk -> GUION NAME IGUAL CADENA_SC .)


state 63

    (30) command_rep -> REP GUION PATH IGUAL CADENA .

    EXECUTE         reduce using rule 30 (command_rep -> REP GUION PATH IGUAL CADENA .)
    MKDISK          reduce using rule 30 (command_rep -> REP GUION PATH IGUAL CADENA .)
    RMDISK          reduce using rule 30 (command_rep -> REP GUION PATH IGUAL CADENA .)
    FDISK           reduce using rule 30 (command_rep -> REP GUION PATH IGUAL CADENA .)
    REP             reduce using rule 30 (command_rep -> REP GUION PATH IGUAL CADENA .)
    $end            reduce using rule 30 (command_rep -> REP GUION PATH IGUAL CADENA .)


state 64

    (31) command_rep -> REP GUION PATH IGUAL CADENA_SC .

    EXECUTE         reduce using rule 31 (command_rep -> REP GUION PATH IGUAL CADENA_SC .)
    MKDISK          reduce using rule 31 (command_rep -> REP GUION PATH IGUAL CADENA_SC .)
    RMDISK          reduce using rule 31 (command_rep -> REP GUION PATH IGUAL CADENA_SC .)
    FDISK           reduce using rule 31 (command_rep -> REP GUION PATH IGUAL CADENA_SC .)
    REP             reduce using rule 31 (command_rep -> REP GUION PATH IGUAL CADENA_SC .)
    $end            reduce using rule 31 (command_rep -> REP GUION PATH IGUAL CADENA_SC .)

