
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'CADENA EXECUTE GUION IGUAL MKDISK PATH REPinit : list_commandslist_commands : list_commands commands\n                    | commandscommands : command_execute\n                | command_mkdisk\n                | command_repcommand_execute : EXECUTE GUION PATH IGUAL CADENAcommand_mkdisk : MKDISKcommand_rep : REP'
    
_lr_action_items = {'EXECUTE':([0,2,3,4,5,6,8,9,10,14,],[7,7,-3,-4,-5,-6,-8,-9,-2,-7,]),'MKDISK':([0,2,3,4,5,6,8,9,10,14,],[8,8,-3,-4,-5,-6,-8,-9,-2,-7,]),'REP':([0,2,3,4,5,6,8,9,10,14,],[9,9,-3,-4,-5,-6,-8,-9,-2,-7,]),'$end':([1,2,3,4,5,6,8,9,10,14,],[0,-1,-3,-4,-5,-6,-8,-9,-2,-7,]),'GUION':([7,],[11,]),'PATH':([11,],[12,]),'IGUAL':([12,],[13,]),'CADENA':([13,],[14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'list_commands':([0,],[2,]),'commands':([0,2,],[3,10,]),'command_execute':([0,2,],[4,4,]),'command_mkdisk':([0,2,],[5,5,]),'command_rep':([0,2,],[6,6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> list_commands','init',1,'p_init','parser_.py',7),
  ('list_commands -> list_commands commands','list_commands',2,'p_list_commands','parser_.py',11),
  ('list_commands -> commands','list_commands',1,'p_list_commands','parser_.py',12),
  ('commands -> command_execute','commands',1,'p_commands','parser_.py',20),
  ('commands -> command_mkdisk','commands',1,'p_commands','parser_.py',21),
  ('commands -> command_rep','commands',1,'p_commands','parser_.py',22),
  ('command_execute -> EXECUTE GUION PATH IGUAL CADENA','command_execute',5,'p_command_execute','parser_.py',26),
  ('command_mkdisk -> MKDISK','command_mkdisk',1,'p_command_mkdisk','parser_.py',30),
  ('command_rep -> REP','command_rep',1,'p_command_rep','parser_.py',34),
]
